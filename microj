#!/bin/sh

###############################################################################
#
#  MicroJournal v0.2
#
#  Personal microjournaling software
#  (c)2011, by Branko Vukelic. All rights reserved.
#  Code relased under GNU GPL v3 (see LICENSE)
#
###############################################################################

VERSION=0.2
BASEDIR="$HOME/.microj"
FULL=off

# Add new entry to current journal file
function add_entry {
    echo
    echo "`date +%H:%M` | $1" >> $JOURNALFILE
}

# Change the current journal dir and journal file
function switch_journalfile {
    JOURNALDATE=`date -d "$1" +"%A %F"`
    JOURNALDIR="$BASEDIR/`date -d $1 +%Y`/`date -d $1 +%m`"
    JOURNALFILE="$JOURNALDIR/`date -d $1 +%d`.microj"
 
    # Create the journal dir if it doesn't exist
    if [ ! -d $JOURNALDIR ]
    then
        mkdir -p $JOURNALDIR
    fi
}

# Show menu
function show_menu {
    echo "[r] Read today's journal entries"
    echo "[f] Toggle full mode (currently $FULL)"
    echo "[y] Read yesterday's journal entries"
    echo "[d] Read entries for a specific date"
    echo "[g] Search current date by keywords (grep)"
    echo "[G] Search all dates by keywords (grep all)"
    echo "[n] New journal entry"
    echo "[q] Quit"
}

# Show journal entry: pass a string of any length to show full version
function show_journal {
    if [ -z "$1" ]
    then
        if [ -f $JOURNALFILE ]
        then
            echo -e "\033[32mfound\033[0m"
            echo "---------------------------------------------------------------"
            if [ $FULL == on ]
            then
                cat $JOURNALFILE \
                    | sed 's/\([0-2][0-9]:[0-5][0-9]\)\(.*\)/echo -e "\\033[33m\1\\033[0m\2"/' \
                    | sh
            else
                cat $JOURNALFILE \
                    | tail \
                    | sed 's/\([0-2][0-9]:[0-5][0-9]\)\(.*\)/echo -e "\\033[33m\1\\033[0m\2"/' \
                    | sh
            fi
            echo "---------------------------------------------------------------"
            echo
        else
            echo -e "\033[31mnot found\033[0m"
            echo "---------------------------------------------------------------"
            echo
        fi
    else
        echo "---------------------------------------------------------------"
        if [ -z "$2" ]
        then
            echo No results found.
        else
            echo "$2" \
                | sed 's/\([0-2][0-9]:[0-5][0-9]\)\(.*\)/echo -e "\\033[33m\1\\033[0m\2"/' \
                | sh
        fi
        echo "---------------------------------------------------------------"
    fi
}

# Set default journaldir and journalfile
switch_journalfile today

# If there's a command line argument, add it to journal and quit
if [ ! -z "$1" ]
then
    add_entry "$1"
    exit 0
fi

# Main loop
while :
do
    clear
    echo MicroJournal v$VERSION
    echo "---------------------------------------------------------------"
    echo -ne "\033[32m$JOURNALDATE\033[0m ... "
    show_journal
    show_menu
    echo
    echo -n "What would you like to do? "
    read -n 1 -s menu_option
    echo
    case "$menu_option" in
        r)
            switch_journalfile today
            ;;
        f) 
            if [ $FULL == on ]
            then
                FULL=off
            else
                FULL=on
            fi
            ;;
        y)
            switch_journalfile yesterday
            ;;
        d)
            echo
            echo -n "Which date? (e.g. '2011 Jul 11', '-2 days', 'next Firday') "
            read -r date_option
            switch_journalfile "$date_option"
            ;;
        g)
            echo
            echo -n "Search for: "
            read -r search_keywords
            clear
            echo -e "Searching today's entries for \033[32m$search_keywords\033[0m:"
            show_journal search "`grep -i "$search_keywords" $JOURNALFILE`"
            echo
            echo -n "Press any key to return to menu..."
            read -n 1
            ;;
        G)
            echo
            echo -n "Search for: "
            read -r search_keywords
            clear
            journal_files=`find $BASEDIR -name *.microj -type f`
            echo -e "Searching all dates for \033[32m$search_keywords\033[0m:"
            for search_file in $journal_files
            do
                search_result=`cat "$search_file" | grep -i "$search_keywords"`
                if [ ! -z "$search_result" ] 
                then
                    echo
                    echo -e "In \033[031m$search_file\033[0m"
                    show_journal search "$search_result"
                fi
            done
            echo
            echo -n "Press any key to return to menu..."
            read -n 1
            ;;

        n)
            echo
            echo -n "Type in your entry: "
            read -r new_entry
            add_entry "$new_entry"
            ;;
        q)
            clear
            exit 0
            ;;
        *)
            echo -n "Invalid option '$menu_option'. Press any key to go back to menu..."
            read -n 1
            ;;
    esac
done

exit 0

